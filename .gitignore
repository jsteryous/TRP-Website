# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Flask-specific
*.pyc
instance/

# Environment variables (contains secrets)
.env
.flaskenv

# Production config
config.py

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# ===============================================
# CRITICAL: PRESERVE DATA AND BACKUPS
# ===============================================

# DO NOT IGNORE these directories - they contain your data!
# data/           <- Commented out so data directory is committed
# backups/        <- Commented out so backups are committed

# But ignore temporary files within data directory
data/*.tmp
data/*.temp
data/*.log
data/test_*.db

# ===============================================
# UPLOADED FILES STRATEGY
# ===============================================

# Strategy 1: Keep all uploaded images (recommended for small sites)
# Comment out the static/uploads/* lines below to keep all uploads

# Strategy 2: Ignore uploaded files but keep directory structure
# Uncomment the lines below if you don't want to commit uploaded images
# static/uploads/*
# !static/uploads/.gitkeep

# For now, we'll keep uploads but ignore very large files
static/uploads/*.mp4
static/uploads/*.mov
static/uploads/*.avi
static/uploads/*.mkv
static/uploads/*.wmv

# Ignore files larger than 5MB (you can adjust this)
# This is a manual process - Git doesn't have built-in size filtering

# ===============================================
# DEPLOYMENT SPECIFIC
# ===============================================

# Heroku
*.py[co]

# Railway
railway.json

# Vercel
.vercel

# Netlify
.netlify

# Docker
Dockerfile.prod
docker-compose.prod.yml
.dockerignore

# ===============================================
# SECURITY AND SECRETS
# ===============================================

# Never commit these files containing secrets
*.key
*.pem
*.crt
secrets/
.secrets

# SSL certificates
ssl/
certs/

# API keys and configurations
api_keys.txt
secrets.json
credentials.json

# ===============================================
# DEVELOPMENT AND TESTING
# ===============================================

# Testing databases
test.db
test_*.db
testing.db

# Development overrides
dev_config.py
local_settings.py

# Debugging files
debug.log
error.log

# ===============================================
# BACKUP AND MAINTENANCE
# ===============================================

# Old database files (if you manually create them)
*.db.old
*.db.backup
*.sql.backup

# Maintenance files
maintenance.html
offline.html

# ===============================================
# NOTES FOR THIS PROJECT
# ===============================================

# This .gitignore is configured to:
# 1. PRESERVE your data/ directory (contains SQLite database)
# 2. PRESERVE your backups/ directory (contains JSON backups)
# 3. PRESERVE small uploaded images in static/uploads/
# 4. IGNORE environment variables and secrets
# 5. IGNORE Python cache and temporary files
# 6. IGNORE IDE and OS generated files

# If you're using a cloud database (PostgreSQL, MySQL), you can
# optionally ignore the data/ directory by uncommenting:
# data/

# Remember to:
# - Set environment variables for production (DATABASE_URL, SECRET_KEY)
# - Change default admin password
# - Regularly backup your database
# - Use HTTPS in production